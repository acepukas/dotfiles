#! /bin/bash

# rmf
# Removes specified line from specified file in todo directory

errmsg="rmf FILE [#ITEM [TERM...]]"
usage="usage: $errmsg"
# check that arg is a file

shift # $1 is file name
[[ $1 = "usage" ]] && echo $usage && exit

file="$TODO_DIR/$1"
[[ ! -f "$file" ]] && echo "No file named '$file' in $TODO_DIR" && exit

shift # $1 is item number if given

# DELETE FILE
if [ -z "$@" ]; then
	# no additional arguments given, delete file
	if  [ $TODOTXT_FORCE = 0 ]; then
		echo "Delete '$file'?  (y/n)"
		read ANSWER
	else
		ANSWER="y"
	fi
	if [ "$ANSWER" = "y" ]; then
		rm $file
		echo "'$file' deleted."
	fi
	exit
fi

# check that arg is a number
[[ ! $1 =~ [0-9]+ ]] && echo $usage && exit
item=$1

shift # $@, if given, is search term

# get the todo
getTodo "$item" $file


if [ -z "$@" ]; then
	# DELETE TASK ITEM
	# no search terms given
	if  [ $TODOTXT_FORCE = 0 ]; then
		echo "Delete '$todo'?  (y/n)"
		read ANSWER
	else
		ANSWER="y"
	fi
	if [ "$ANSWER" = "y" ]; then
		if [ $TODOTXT_PRESERVE_LINE_NUMBERS = 0 ]; then
			# delete line (changes line numbers)
			sed -i.bak -e $item"d" -e '/./!d' "$file"
		else
			# leave blank line behind (preserves line numbers)
			# sed -i.bak -e $item"c\\" "$file"
			sed -i.bak -e $item"c\\" "$file"
		fi
		if [ $TODOTXT_VERBOSE -gt 0 ]; then
			echo "$item $todo"
			echo "$(getPrefix $file): $item deleted."
		fi
	else
		echo "$(getPrefix $file): No tasks were deleted."
	fi
else
	# DELETE TERM FROM ITASK ITEM
	sed -i.bak \
		-e $item"s/^\((.) \)\{0,1\} *$@ */\1/g" \
		-e $item"s/ *$@ *\$//g" \
		-e $item"s/  *$@ */ /g" \
		-e $item"s/ *$@  */ /g" \
		-e $item"s/$@//g" \
		"$TODO_FILE"
	getNewtodo "$item"
	if [ "$todo" = "$newtodo" ]; then
		[ $TODOTXT_VERBOSE -gt 0 ] && echo "$item $todo"
		die "TODO: '$@' not found; no removal done."
	fi
	if [ $TODOTXT_VERBOSE -gt 0 ]; then
		echo "$item $todo"
		echo "TODO: Removed '$@' from task."
		echo "$item $newtodo"
	fi
fi
